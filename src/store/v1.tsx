import * as IO from 'io-ts';
import { prompt } from '../helpers/io';
import { Button } from '../components/Button';

export type Target = 'Animal' | 'Object' | 'Person' | 'Plant';
export type Element = 'Feu' | 'Air' | 'Eau' | 'Terre' | 'Ã‚me' | 'Corps';

export type Spell = {
  name: string;
  incantation: string;
  description: string;
  targets: {
    [key in Target]: boolean;
  };
  level: number;
  primaryElement: Element;
  secondaryElement: Element;
};

export type State = {
  userSpells: Spell[],
  uses: Record<string, number>,
};
export const defaultState: State = {
  userSpells: [],
  uses: {},
};

export const elementDecoder = IO.union([
  IO.literal('Air'),
  IO.literal('Eau'),
  IO.literal('Terre'),
  IO.literal('Feu'),
  IO.literal('Ã‚me'),
  IO.literal('Corps'),
]);
export const spellDecoder = IO.strict({
  name: IO.string,
  incantation: IO.string,
  description: IO.string,
  targets: IO.strict({
    Animal: IO.boolean,
    Object: IO.boolean, 
    Person: IO.boolean,
    Plant: IO.boolean,
  }),
  level: IO.number,
  primaryElement: elementDecoder,
  secondaryElement: elementDecoder,
});
export const stateDecoder = IO.strict({
  userSpells: IO.array(spellDecoder),
  uses: IO.record(IO.string, IO.number),
});

const Welcome = ({callback}: {callback: () => void}) => (
  <div className="flex flex-col space-y-4 p-2">
    <p>
      Avant de commencer sache que tout ce que tu inscris ici est <strong>sauvegardÃ© en cache sur ton navigateur.
      </strong> Ainsi si tu changes de navigateur, d'ordinateur ou qu'il se passe quoi que ce soit d'imprÃ©vue
      (les bugs ici n'existant Ã©videmment pas) tu pourras dire avec nous cette magnifique phrases dont la vÃ©racitÃ© n'a d'Ã©gale
      que sa douce simplicitÃ© Â«Â Câ€™est balot!Â Â».
    </p>
    <div>
      <div className="flex flex-row space-x-4 p-2">
        <input id="ðŸ™ˆ" type="checkbox"/><label htmlFor="ðŸ™ˆ">J'accepte l'inacceptable *</label>
      </div>
    </div>
    <Button onClick={callback} type="primary">En avant!</Button>
    <small>* Cette case Ã  cocher ne sert Ã  rien mais c'est devenue Ã  la mode du coup j'en met une aussi, Ã§a fait tout de suite plus pro vous ne trouvez pas?</small>
  </div>
);

function update(_currentState: unknown): Promise<State> {
  return Promise.resolve()
    .then(
      () => prompt<void>(
        (callback: () => void) => <Welcome callback={callback} />,
        <>Bienvenue sur ta fiche de personnage</>
      )
    )
    .then(() => defaultState)
}

export function retrieve(currentState: unknown): Promise<State> {
  return stateDecoder.is(currentState)
    ? Promise.resolve(currentState)
    : update(currentState);
}